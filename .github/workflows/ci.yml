name: Send Python Version to Jenkins

on:
  push:
    branches:
      - main

jobs:
  send-python-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
       fetch-depth: 0
       tags: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Spécifiez la version de Python ici

    - name: Get Python version
      id: get-python-version
      run: echo "python-version=$(python --version)" >> $GITHUB_ENV
    - name: get tags
      id: set_vars
      run: |
          LAST_TAG="$(git describe --tags --abbrev=0 2>/dev/null)"
          EXIT_CODE=$?
          if [ $EXIT_CODE -eq 0 ]; then
          # Si la commande réussit, utilisez le tag trouvé
            NAME=$LAST_TAG
          else
              # Si aucun tag n'est trouvé (code 128), utilisez une valeur par défaut
            NAME="v0.0.0-initial"
          fi
          echo "package_name=$NAME" >> $GITHUB_OUTPUT
    - name: latest tag
      run: |
         PACKAGE_NAME="${{ steps.set_vars.outputs.package_name }}"
         echo $PACKAGE_NAME

    - name: Send Python version to Jenkins
      env:
        JENKINS_URL: ${{ secrets.JENKINS_URL }}  # Définissez cela dans les secrets GitHub
        JENKINS_USER: ${{ secrets.JENKINS_USER }}  # Définissez cela dans les secrets GitHub
        JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}  # Définissez cela dans les secrets GitHub
        PYTHON_VERSION: ${{ env.python-version }}
      run: |
        curl -X POST "https://9a58-216-209-220-214.ngrok-free.app/job/receive-data/buildWithParameters" \
         --user "admin:11b416e3dd5eab3dd24c6e2867f19da128" --data PYTHON_VERSION=${{ env.PYTHON_VERSION }}
